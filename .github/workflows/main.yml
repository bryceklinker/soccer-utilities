  on: [push]
  jobs:
    verify:
      name: Verify
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
          name: Checkout

        - uses: actions/setup-node@v2
          name: Setup Node
          with:
            node-version: '14'

        - run: npm ci
          name: Install Node Packages

        - run: npm test
          name: Run Tests

        - run: npm run build
          name: Build Applications

        - run: npm install --production
          name: Install Function App Packages
          working-directory: ${{ github.workspace }}/dist/apps/rest-api

        - run: terraform init
          name: Initialize Terraform
          working-directory: ${{ github.workspace }}/apps/infrastructure/environments/prod
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}

        - run: terraform plan -var='auth0_domain=${{ secrets.AUTH0_DOMAIN }}' -out=prod.tfplan
          name: Terraform Plan
          working-directory: ${{ github.workspace }}/apps/infrastructure/environments/prod
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}

        - uses: montudor/action-zip@v1
          name: Create Rest Api Zip
          with:
            args: zip -qq -r dist/apps/rest-api.zip -d dist/apps/rest-api

        - uses: actions/upload-artifact@v2
          with:
            name: rest-api
            path: |
              dist/apps/rest-api.zip

        - uses: actions/upload-artifact@v2
          with:
            name: web-ui
            path: |
              dist/apps/web-ui/**/*.*

        - uses: actions/upload-artifact@v2
          with:
            name: plan
            path: |
              ${{ github.workspace }}/apps/infrastructure/environments/prod/*.plan

    deploy:
      name: Deploy
      runs-on: ubuntu-20.04
      needs: [verify]
      environment: prod
      steps:
        - uses: actions/checkout@v2
          name: Checkout

        - uses: actions/setup-node@v2
          name: Setup Node
          with:
            node-version: '14'

        - uses: hashicorp/setup-terraform@v1
          name: Setup Terraform
          with:
            terraform_version: 1.0.0

        - uses: actions/download-artifact@v2
          with:
            name: rest-api
            path: dist/apps/rest-api

        - uses: montudor/action-zip@v1
          name: Unzip Rest Api
          with:
            args: unzip -qq dist/apps/rest-api.zip -d dist/apps/rest-api

        - uses: actions/download-artifact@v2
          with:
            name: web-ui
            path: dist/apps/web-ui

        - uses: actions/download-artifact@v2
          with:
            name: plan
            path: ${{ github.workspace }}/apps/infrastructure/environments/prod

        - run: npm ci
          name: Install Node Packages

        - run: terraform init
          name: Initialize Terraform
          working-directory: ${{ github.workspace }}/apps/infrastructure/environments/prod
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}

        - run: terraform apply prod.tfplan
          working-directory: ${{ github.workspace }}/apps/infrastructure/environments/prod
          name: Terraform Apply
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
            AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
            AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
            AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}

        - run: npm run e2e
          name: Run End-to-End Tests
          env:
            CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
            CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
            CYPRESS_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
            CYPRESS_AUTH0_USERNAME: ${{ secrets.CYPRESS_AUTH0_USERNAME }}
            CYPRESS_AUTH0_PASSWORD: ${{ secrets.CYPRESS_AUTH0_PASSWORD }}
            CYPRESS_AUTH0_AUDIENCE: ${{ secrets.CYPRESS_AUTH0_AUDIENCE }}
            CYPRESS_BASE_URL: https://stprodsoccersite.z19.web.core.windows.net

        - uses: actions/upload-artifact@v2
          if: failure()
          with:
            name: cypress
            path: |
              dist/cypress/apps/web-ui-e2e/screenshots/**/*.*
              dist/cypress/apps/web-ui-e2e/videos/**/*.*
